image: node:12.13

before_script:
  - export SERVICE="suppliers-mutual-settlements-front"
  - export IMAGE_NAME="$CI_REGISTRY_IMAGE/$SERVICE"

variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_TLS_CERTDIR: ""
  ENDPOINT_REVISES: http://test/api/v1/revises
  ENDPOINT_CONTRACTS: http://test/api/v1/contracts

stages:
  - install_dependencies
  - tests_bundle
  - integration-tests
  - release

install_dependencies:
  tags:
    - golang
    - linux
  stage: install_dependencies
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/

lint:
  tags:
    - golang
    - linux
  stage: tests_bundle
  script:
    - node ./config/ink/_utils/ci-utils/executor.js --command=lint-full

test:
  tags:
    - golang
    - linux
  stage: tests_bundle
  script:
    - node ./config/ink/_utils/ci-utils/executor.js --command=test

npm_ckeck_vulnerabilities:
 tags:
   - golang
   - linux
 stage: tests_bundle
 script:
   - node ./config/ink/_utils/ci-utils/executor.js --command=check-npm-packages

build:
  tags:
    - golang
    - linux
  stage: tests_bundle
  script:
    - node ./config/ink/_utils/ci-utils/executor.js --command=build
  artifacts:
    paths:
      - build/

integration-tests:
  tags:
    - golang
    - linux
  stage: integration-tests
  image: circleci/node:12.13-browsers
  script:
    - node ./config/ink/_utils/ci-utils/executor.js --command=integration-tests

release:
    tags:
      - golang
      - linux
    stage: release
    image: git.wildberries.ru:4567/infrastructure/deploy-service/deploy-service/client:latest
    services:
      - docker:dind
    only:
      - tags
      - /^v\d+\.\d+\.\d+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$/
    except:
      - branches
    script:
      - apk add --no-cache make docker
      - echo "Release version $CI_COMMIT_TAG"
      - export DEBUG=true
      - deploy-service-client -c deploy-service-client.conf.yaml

